idl         = (import_def/extern)* (type_def/namespace)* EOF
comment     = r'#.*$'+
type_def    = enum/flags/record/interface
enum        = comment? identifier '=' 'enum' '{' item* '}'
flags       = comment? identifier '=' 'flags' '{' flag* '}'
declaration = 'eq'/'ord'/'json'
deriving    = 'deriving' '(' ((declaration ',')* declaration)? ')'
record      = comment? identifier '=' 'record' targets? '{' (field/constant)* '}' deriving?
interface   = comment? identifier '=' 'interface' targets '{' (method/constant)* '}'
constant    = comment? 'const' identifier ':' data_type '=' value ';'
value       = (string/float/integer/bool/identifier/object)
string      = r'".*"'
integer     = r'\d+'
float       = r'\d*\.\d+'
bool        = 'True'/'False'
object      = '{' ((assignment ',')* assignment)? '}'
assignment  = identifier '=' value
field       = comment? identifier ':' data_type ';'
method      = comment? 'static'? 'const'? identifier '(' ((parameter ',')* parameter)? ')' (':' data_type)? ';'
parameter   = identifier ':' data_type
targets     = (r'\+[a-z]+'/r'-[a-z]+')*
item        = comment? identifier ';'
flag        = comment? identifier ('=' ('all'/'none'))? ';'
identifier  = r'[-\w]+'
data_type   = r'[-\.\w]+'
filepath    = r'".*"'
import_def  = '@import' filepath
extern      = '@extern' filepath
namespace   = 'namespace' (identifier '.')* identifier '{' (type_def/namespace)* '}'
