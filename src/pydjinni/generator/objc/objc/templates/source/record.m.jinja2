{% extends "base.jinja2" %}

{% block header %}
#import {{ type_def.objc.header | quote }}
{% endblock %}

{% block content %}
@implementation {{ type_def.objc.name }}

- (nonnull instancetype){{ type_def.objc.init }}
    {%- for field in type_def.fields -%}
        {{ (" " ~ field.objc.name if not loop.first) ~ ":" }}({{ field.objc.type_decl}}){{ field.objc.name }}
    {%- endfor %} {
    if(self = [super init]) {
        {% for field in type_def.fields %}
            _{{ field.objc.name }} = {{ field.objc.name }};
        {% endfor %}
    }
    return self;
}

+ (nonnull instancetype){{ type_def.objc.convenience_init }}
    {%- for field in type_def.fields -%}
        {{ (" " ~ field.objc.name if not loop.first) ~ ":" }}({{ field.objc.type_decl}}){{ field.objc.name }}
    {%- endfor %} {
    return [({{ type_def.objc.name }}*)[self alloc] {{ type_def.objc.init }}
    {%- for field in type_def.fields -%}
        {{ (" " ~ field.objc.name if not loop.first) ~ ":" }}{{ field.objc.name }}
    {%- endfor -%}
    ];
}

{% if 'str' in type_def.deriving %}
- (NSString *)description {
    return [NSString stringWithFormat:@"<%@
    {%- for field in type_def.fields -%}
        {{ " " ~ field.objc.name }}:%@
    {%- endfor -%}
    >", self.class
    {%- for field in type_def.fields -%}
        {%- if field.type_ref.type_def.name == "bool" -%}
            , self.{{ field.objc.name }} ? @"YES" : @"NO"
        {%- elif not field.type_ref.type_def.objc.pointer and not field.type_ref.optional -%}
            , @(self.{{ field.objc.name }})
        {%- else -%}
            , self.{{ field.objc.name }}
        {%- endif -%}
    {%- endfor -%}
    ];
}
{% endif %}
@end
{% endblock %}
