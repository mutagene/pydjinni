{% include "base.jinja2" %}
{% from "macros.jinja2" import comment, constant_def %}

{% block content %}
{{ comment(type_def, indentation=0) }}
{{ config.class_access_modifier.value ~ (" final" if config.use_final_for_record) }} class {{ type_def.java.name }} {
    {% for constant in type_def.constants -%}
    {{ constant_def(constant) }}
    {%- endfor %}

{% for field in type_def.fields %}
    {{ comment(field) }}
    {{ "final" if config.use_final_for_record }} {{ field.type_ref.type_def.java.typename }} {{ field.java.name }};
{% endfor %}
    public {{ type_def.java.name }}(
    {% for field in type_def.fields %}
        {{ field.type_ref.type_def.java.typename }} {{ field.java.name ~ ("," if not loop.last) }}
    {% endfor %}
    ) {
    {% for field in type_def.fields %}
        this.{{ field.java.name }} = {{ field.java.name }};
    {% endfor %}
    }

{% for field in type_def.fields %}
    public {{ field.type_ref.type_def.java.typename }} {{ field.java.getter }}() { return {{ field.java.name }}; }
{% endfor %}

    @Override
    public String toString() {
        return "{{ type_def.java.typename }}{" +
        {% for field in type_def.fields %}
            "{{ ("," if not loop.first) ~ field.java.name }}=" + {{ field.java.name }} +
        {% endfor %}
        "}";
    }
}
{% endblock %}
