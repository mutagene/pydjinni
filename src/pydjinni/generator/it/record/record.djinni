primitive_types = record {
    boolean_t: bool;
    byte_t: i8;
    short_t: i16;
    int_t: i32;
    long_t: i64;
    float_t: f32;
    double_t: f64;
    string_t: string;
    date_t: date;
} deriving (str)

collection_types = record {
    int_list: list<i32>;
    string_list: list<string>;

    int_set: set<i32>;
    string_set: set<string>;

    int_int_map: map<i32, i32>;
    string_string_map: map<string, string>;
} deriving (str)

optional_types = record {
    int_optional: i32?;
    string_optional: string?;
} deriving (str)

binary_types = record {
    binary_t: binary;
    binary_optional: binary?;
}

constant_types = record {
    const boolean_c: bool = True;
    const byte_c: i8 = 8;
    const short_c: i16 = 16;
    const int_c: i32 = 32;
    const long_c: i64 = 64;
    const float_c: f32 = 32.32;
    const double_c: f64 = 64.64;
}

helper = main interface +cpp {
    static get_primitive_types(record: primitive_types) -> primitive_types;
    static get_collection_types(record: collection_types) -> collection_types;
    static get_optional_types(record: optional_types) -> optional_types;
    static get_binary_types(record: binary_types) -> binary_types;
}
