{% macro value_def(value, type_def) %}
{%- if value is string -%}"{{ value }}"
{%- elif value is boolean %}{{ "true" if value else "false" }}
{%- elif value is number %}{{ value ~ ("f" if type_def.primitive.value == "float") }}
{%- else %}{{ type_def.cpp.typename }}(
{%- for field in type_def.fields -%}
    {{ value_def(value.assignments[field.name].value, field.type_ref.type_def) ~ (", " if not loop.last) }}
{%- endfor -%}
)
{%- endif -%}
{% endmacro %}

{% macro constant_declaration(constant) %}
    {% if constant.comment %}
    {{ constant.cpp.comment | indent(4) }}
    {% endif %}
    static const {{ constant.type_ref.type_def.cpp.typename }} {{ constant.cpp.name }};
{% endmacro %}

{% macro constant_definition(type_def, constant) %}
    const {{ constant.type_ref.type_def.cpp.typename }} {{ type_def.cpp.name }}::{{ constant.cpp.name }} = {{ value_def(constant.value, constant.type_ref.type_def) }};
{% endmacro %}
