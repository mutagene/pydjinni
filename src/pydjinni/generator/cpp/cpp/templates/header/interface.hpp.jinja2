{% extends "base.jinja2" %}
{% from "macros.jinja2" import constant_declaration %}

{% block header %}
#pragma once
#include <memory>
{% endblock %}

{% block content %}
{% if type_def.comment %}
{{ type_def.cpp.comment }}
{% endif %}
class {{ type_def.cpp.name }} {
public:
{% for constant in type_def.constants -%}
    {{ constant_declaration(constant) }}
{%- endfor %}
{% for method in type_def.methods %}
    {% if method.comment %}
    {{ method.cpp.comment | indent(4) }}
    {% endif %}
    {{ method.cpp.attribute }} {{ method.cpp.type_spec }} {{ method.cpp.name }}(
    {%- for parameter in method.parameters -%}
        {{ parameter.cpp.type_spec }} {{ parameter.cpp.name ~ (", " if not loop.last) }}
    {%- endfor -%}
    ){{ " const" if method.const }}{{ " = 0" if not method.static }};
{% endfor %}
};
{% endblock %}
