name: Build the python package

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  release:
    types: [created, released]
jobs:
  test:
    strategy:
      matrix:
        python-version: [ "3.10", "3.11" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dev dependencies
        run: pip install .[dev]
      - name: Run tests
        run: pytest
  test_support_lib:
    name: Unit-test Support Lib
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure CMake
        run: cmake -B build
      - name: Build
        run: cmake --build build
      - name: Run Unit-Tests
        run: ctest --test-dir build
  test_docs:
    name: Test-build documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install doc dependencies
        run: pip install .[doc]
      - name: Build Documentation
        run: mkdocs build
      - uses: actions/upload-artifact@v3
        with:
          name: site
          path: site/
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install build dependencies
        run: pip install .[publish]
      - name: Build dist
        run: python -m build
      - name: Check created package
        run: twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: [build, test, test_support_lib, test_docs]
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install build dependencies
        run: pip install .[publish]
      - name: Publish package to TestPyPi
        if: github.event.release.draft
        run: twine upload -r testpypi -p ${{ env.TWINE_TESTPYPI_PASSWORD }} --disable-progress-bar dist/*
      - name: Publish package to PyPi
        if: ! github.event.release.draft
        run: twine upload --disable-progress-bar dist/*
  publish_docs:
    runs-on: ubuntu-latest
    needs: [publish]
    if: github.event_name == 'release' && ! github.event.release.draft && ! github.event.release.prerelease
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install doc dependencies
        run: pip install .[doc]
      - name: Build and publish docs
        run: mike deploy --push --update-aliases $(git describe --tag | grep -o '^v\d*.\d*') latest
